<Macro VhostWordpress $host $domain>

  Use VhostPhp $host $domain

  <IfModule php_module>
    # We store symlinked copies of some of our Wordpress plugins under
    # /usr/local/lib64/wordpress/plugins; see the wiki:
    #
    #   https://wiki.viabit.com/Wordpress#Global_plugins
    #
    php_admin_value open_basedir /var/www/$domain/$host/:/usr/share/php/:/usr/local/lib/wordpress/plugins/
  </IfModule>

  <IfModule php7_module>
    # We store symlinked copies of some of our Wordpress plugins under
    # /usr/local/lib64/wordpress/plugins; see the wiki:
    #
    #   https://wiki.viabit.com/Wordpress#Global_plugins
    #
    php_admin_value open_basedir /var/www/$domain/$host/:/usr/share/php/:/usr/local/lib/wordpress/plugins/
  </IfModule>

  <Directory "/var/www/$domain/$host/public">
    # Necessary to symlink plugins to a shared global location.
    Options +SymLinksIfOwnerMatch
  </Directory>

  # Block direct access to Wordpress theme templates. These files sit
  # in a public directory, but aren't meant to be accessed directly --
  # when they are, they spew PHP errors all over the logs.
  <DirectoryMatch "^/var/www/$domain/$host/public/wp-content/themes/[a-zA-Z\-_0-9]">
    <FilesMatch "^(404|archive|attachment|author|category|date|embed|footer|front-page|header|home|index|page|privacy-policy|search|sidebar|single|singular|tag|taxonomy).*\.php$">
      # This list of all template prefixes (minus arbitrary custom
      # names) can be found at,
      #
      #   https://developer.wordpress.org/themes/basics/template-hierarchy/
      #
      Require all denied
    </FilesMatch>
  </DirectoryMatch>

  # Also block direct access to Wordpress's "include" files. This is
  # loosely based off the examples rules in the Wordpress hardening
  # guide at https://wordpress.org/support/article/hardening-wordpress
  <DirectoryMatch "^/var/www/$domain/$host/public/wp-admin/includes">
    <FilesMatch "\.php$">
      Require all denied
    </FilesMatch>
  </DirectoryMatch>

  # We don't anchor the directory match at the end, so this will match
  # any subdirectory of wp-includes, too.
  <DirectoryMatch "^/var/www/$domain/$host/public/wp-includes">
    <FilesMatch "\.php$">
      Require all denied
    </FilesMatch>
  </DirectoryMatch>

  # Most of the wp-admin/*.php files have guards in them against direct
  # access, but these don't.
  <DirectoryMatch "^/var/www/$domain/$host/public/wp-admin">
    <FilesMatch "^(admin-functions|custom-background|custom-header|menu-header|menu|options-head|upgrade-functions)\.php$">
      Require all denied
    </FilesMatch>
  </DirectoryMatch>

  # The contact form module sticks the answers to its CAPTCHA in this
  # directory, and then hopes/wishes/prays that its apache-2.2.x
  # .htaccess file will prevent anonymous web access to the answers
  # (which have predictable names!). We need to wipe out the generated
  # .htaccess because it kills apache-2.4, but we don't want people to
  # be able to read the CAPTCHA answers.
  <Directory "/var/www/$domain/$host/public/wp-content/uploads/wpcf7_captcha">
    Require all denied
    <FilesMatch "^[0-9A-Za-z]+\.(jpeg|gif|png)$">
      Require all granted
    </FilesMatch>
  </Directory>

  Use Wordpress

</Macro>
